#!/usr/bin/env python

import sys
import re

def usage():
        print "unit 200 ms"
        print "time units: ns,us,ms,s,m,h,d"
        print "byte units: bit,B,Bl,Kb,p,Kbit,Mb,Mbit,Gb,Gbit,Tb"
        print "Bl = 512 bytes"
        sys.exit(1)


if len(sys.argv) != 3:
        usage()

val = int(sys.argv[1], 0)
unit = sys.argv[2]

times = {
        "ns": ( 1000000000, "nanoseconds" ),
        "us": ( 1000000, "microseconds" ),
        "ms": ( 1000, "milliseconds" ),
        "s": ( 1, "seconds" ),
        "m": ( 0.0166666667, "minutes" ),
        "h": ( 0.000277777778, "hours" ),
        "d": ( 1.15740741e-5, "days" ),
}

bytes = {
        "bit": ( 1024 * 8, "bits" ),
        "B": ( 1024, "bytes" ),
	"P": ( 128, "64-bit pointers" ),
        "Bl": ( 2, "blocks" ),
        "KB": ( 1, "kilobytes" ),
        "p": ( 0.25, "(4K) pages" ),
        "Kb": ( 8192 / 1000.0, "kilobits" ),
        "Mb": ( 8192 / (1000.0 * 1000.0), "megabits" ),
        "Gb": ( 8192 / (1000.0 * 1000.0 * 1000.0), "gigabits" ),
        "MB": ( 1/1024.0, "megabytes" ),
        "GB": ( 1/(1024.0 * 1024.0), "gigabytes" ),
        "TB": ( 1/(1024.0 * 1024.0 * 1024.0), "terabytes" ),
        "s (1Gbit link)": ( 8192 / (1000.0 * 1000.0 * 1000.0), "seconds over 1Gbit link" ),
        "s (10Gbit link)": ( 8192 / (10 * 1000.0 * 1000.0 * 1000.0), "seconds over 10Gbit link" ),
}

if unit in times.keys():
        table = times
elif unit in bytes.keys():
        table = bytes
else:
        print "unknown unit %s" % unit
        sys.exit(1)

norm = float(val) / table[unit][0]

def compare(x, y):
        return cmp(x[1][0], y[1][0])

for key, val in sorted(table.items(), cmp=compare):
        print "%f %s" % (norm * val[0], val[1])

